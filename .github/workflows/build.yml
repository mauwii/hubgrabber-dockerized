name: Docker Image CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
        
      - name: Check out the repo
        uses: actions/checkout@v2
        
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=latest
          if [[ '${{ github.head_ref }}' != '' ]]; then
            VERSION=${{github.head_ref}}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${{ steps.date.outputs.date }}"
          echo ${TAGS}
          echo "tags=${TAGS}" >> "$GITHUB_OUTPUT"
        
      - name: Prepare-multiarch
        id: prep-multiarch
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          VERSION=latest
          if [[ '${{ github.head_ref }}' != '' ]]; then
            VERSION=${{github.head_ref}}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}-multiarch,${DOCKER_IMAGE}:${{ steps.date.outputs.date }}-multiarch"
          echo ${TAGS}
          echo "tags-multiarch=${TAGS}" >> "$GITHUB_OUTPUT"
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Set up cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@main      
        
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}  
          
      - name: Push multiarch to GitHub Packages
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: ${{ steps.prep-multiarch.outputs.tags-multiarch }}
          
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
